service:
  name: lambda-dynamo-typescript-poc

plugins:
  - serverless-offline
  - serverless-webpack

package:
  individually: true
  include:
    - src/**

custom:
  apiEntity: todos

provider:
  name: aws
  runtime: nodejs10.x
  region: ${opt:region, 'eu-west-2'}
  memorySize: 128
  environment:
    TABLE_NAME: ddb-${self:custom.apiEntity}
    API_ENTITY: ${self:custom.apiEntity}
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - 'dynamodb:PutItem'
        - 'dynamodb:GetItem'
        - 'dynamodb:DeleteItem'
      Resource: arn:aws:dynamodb:*:*:table/${self:provider.environment.TABLE_NAME}

functions:
  get:
    handler: src/get.handler
    events:
      - http:
          method: get
          path: ${self:custom.apiEntity}/{id}
          cors: true

  list:
    handler: src/list.handler
    events:
      - http:
          method: get
          path: ${self:custom.apiEntity}
          cors: true

  put:
    handler: src/put.handler
    events:
      - http:
          method: put
          path: ${self:custom.apiEntity}/{id}
          cors: true

  delete:
    handler: src/delete.handler
    events:
      - http:
          method: delete
          path: ${self:custom.apiEntity}/{id}
          cors: true

resources:
  Resources:
    DynamoTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.TABLE_NAME}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        SSESpecification:
          SSEEnabled: true
